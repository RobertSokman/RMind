type Client @model {
  id: ID!
  customerNo: Int!
  rm_No: Int!

  name: String!
  surname: String!
  nationality: String
  birthday: String
  sector: String
  customerStatus: String
  languageOfReporting: String
  domicile: String
  internetBankingService: String
  reportingCurrency: String

  portfolios: [Portfolio] @connection(keyName: "ownedBy", fields: ["id"])
}

type Security @model @key(name: "belongTo", fields: ["parentId"]) {
  id: ID
  securityCode: String
  company: String
  description: String
  currency: String
  price1: Float
  priceOneDate: String
  price2: Float
  priceTwoDate: String
  price3: Float
  priceThreeDate: String
  price4: Float
  priceFourDate: String
  price5: Float
  priceFiveDate: String
  parentNo: Int
  parentId: ID
  parentPortfolio: Portfolio @connection(fields: ["parentId"])

  trades: [TradingActivity] @connection(keyName: "with", fields: ["id"])
}

type Portfolio @model @key(name: "ownedBy", fields: ["ownerId"]) {
  id: ID
  portfolioNo: String
  portfolioNoNumerical: Int
  status: String
  type: String
  feeCode: String
  initialValue: Float
  ownerNo: Int
  ownerId: ID!
  owner: Client @connection(fields: ["ownerId"])

  securities: [Security] @connection(keyName: "belongTo", fields: ["id"])
}

type Reminder @model {

  reminderNo: Int
  id: ID
  name: String
  description: String
  dueDate: AWSDate
  
}

type TradingActivity @model @key(name: "with", fields: ["securityId"]){
  securityId: ID
  portfolioNo: Int
  securityNo: Int
  securityCode: String
  type: String
  dateOfTransaction: String
  amount: Float
  company: String
  securityInvolved: Security @connection(fields: ["securityId"])
}